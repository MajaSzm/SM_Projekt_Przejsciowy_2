library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
konsumpcja <- read_csv("Coffee_domestic_consumption.csv")
eksport_old <- read.csv2("Coffee_export.csv")
import <- read_csv("Coffee_import.csv")
produkcja <- read_csv("Coffee_production.csv")
re_eksport <- read_csv("Coffee_re_export.csv")
konsumpcja_import <- read_csv("Coffee_importers_consumption.csv")
stock_green <- read_csv("Coffee_green_coffee_inventorie.csv")

eksport <- eksport_old %>%
  rename_all(~ gsub("X", "", .))
head(eksport)
# sprawdzenie minusowych wartości w źródle
lista_df <- list(konsumpcja, eksport, import, produkcja, re_eksport, konsumpcja_import, stock_green)

# Iteruj przez listę
for (i in seq_along(lista_df)) {
  df <- lista_df[[i]]
  wiersze_z_minusowymi <- df[rowSums(df < 0, na.rm = TRUE) > 0, ]
  
  if (nrow(wiersze_z_minusowymi) > 0) {
    cat(paste("Minusowe wartości w zbiorze danych", i, ":\n"))
    print(wiersze_z_minusowymi)
  } else {
    cat(paste("Brak minusowych wartości w zbiorze danych", i, "\n"))
  }
}
#########################EKSPORT##############################
# wybranie top 10 eksporterów, producentów i importerów

top_eksport <- eksport %>%
  arrange(desc(Total_export)) 
print(top_eksport)

top_eksport <- top_eksport[, -ncol(top_eksport)]
print(top_eksport)

top_eksport_long <- top_eksport %>%
  pivot_longer(cols = -Country, names_to = "Year", values_to = "Value")
print(top_eksport_long)

# dzielenie kolumny Value przez 1000000 i zaokraglenie do dwoch miejsc po przecinku
top_eksport_long$Value <- round(top_eksport_long$Value / 1e6, 2)
head(top_eksport_long)

ggplot(top_eksport_long, aes(x = Year, y = Value, color = Country, group = Country)) +
  geom_line() +
  labs(title = "Eksport kawy w czasie",
       x = "Rok",
       y = "Wyeksportowane miliony kilogramów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

library(zoo)
window_size <- 5

top_eksport_long <- top_eksport_long %>%
  arrange(Country, Year) %>%
  group_by(Country) %>%
  mutate(Smoothed_Value = zoo::rollmean(Value, k = window_size, fill = NA, align = "right", na.rm = TRUE))

ggplot(top_eksport_long, aes(x = Year, y = Smoothed_Value, color = Country, group = Country)) +
  geom_line() +
  labs(title = "Eksport kawy w czasie",
       x = "Rok",
       y = "Wyeksportowane miliony kilogramów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

###############################IMPORT##########################################

#zamiana na long format i wyfiltrowanie krajow europejskich (ze wzgledu na ich dominacje w tabeli)

top_import <- import %>%
  arrange(desc(Total_import)) 

top_import <- top_import[, -ncol(top_import)]
print(top_import)

top_import_long <- top_import %>%
  pivot_longer(cols = -Country, names_to = "Year", values_to = "Value")
print(top_eksport_long)

#dzielenie kolumny Value przez 1000000 i zaokraglenie do dwoch miejsc po przecinku
top_import_long$Value <- round(top_import_long$Value / 1e6, 2)
head(top_import_long)

#filtrowanie krajow EU z zestawienia

kraje_eu <- c(
  'Austria', 'Belgium', 'Belgium/Luxembourg', 'Bulgaria', 'Croatia', 'Cyprus',
  'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece',
  'Hungary', 'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta',
  'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain'
)

kraje_eu_df <- top_import_long %>%
  filter(trimws(Country) %in% kraje_eu)

#Import europy w przebiegu czasu

eu_total_import <- kraje_eu_df %>%
  group_by(Year) %>%
  summarise(Total_Imports = sum(Value))


eu_country_total_import <- kraje_eu_df %>%
  group_by(Country) %>%
  summarise(Total_Imports = sum(Value)) %>%
  arrange(desc(Total_Imports))

print(eu_country_total_import)


ggplot(eu_country_total_import, aes(x = reorder(Country, -Total_Imports), y = Total_Imports, fill = Country)) +
  geom_bar(stat = "identity") +
  labs(title = "Najwięksi importerzy kawy w Europie",
       x = "Kraj",
       y = "Importowane miliony kilogramów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  coord_flip() +  
  theme(legend.position="none")  

konsumpcja_importerzy_long <- konsumpcja_importerzy %>%
  pivot_longer(cols = -Country, names_to = "Year", values_to = "Value")
print(konsumpcja_importerzy_long)

konsumpcja_importerzy_long$Value <- round(konsumpcja_importerzy_long$Value / 1e6, 2)

kraje_eu_konsumpcja <- konsumpcja_importerzy_long %>%
  filter(trimws(Country) %in% kraje_eu)

print(kraje_eu_konsumpcja)

ggplot() +
  geom_bar(data = kraje_eu_konsumpcja, aes(x = reorder(Country, -Value), y = Value, fill = "Import"), stat = "identity", position = "dodge") +
  geom_bar(data = kraje_eu_df, aes(x = reorder(Country, Value), y = Value, fill = "Konsumpcja"), stat = "identity", position = "dodge") +
  labs(title = "Porównanie importu i konsumpcji kawy w Europie",
       x = "Kraj",
       y = "Miliony kilogramów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  coord_flip() +
  scale_fill_manual(values = c("Import" = "blue", "Konsumpcja" = "red"), name = "Rodzaj") +
  theme(legend.position = "top")

###reeksport#####
###reeksport#####

re_eksport <- re_eksport[, -ncol(re_eksport)]
print(re_eksport)

re_eksport_long <- re_eksport %>%
  pivot_longer(cols = -Country, names_to = "Year", values_to = "Value")
print(re_eksport_long)

#dzielenie kolumny Value przez 1000000 i zaokraglenie do dwoch miejsc po przecinku
re_eksport_long$Value <- round(re_eksport_long$Value / 1e6, 2)
head(re_eksport_long)


ggplot(re_eksport_long, aes(x = Year, y = Value, color = Country, group = Country)) +
  geom_line() +
  labs(title = "Reeksport kawy w czasie",
       x = "Rok",
       y = "Wyreeksportowane miliony kilogramów") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

###########################Produkcja############################################
